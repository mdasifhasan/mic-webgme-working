var Data = function () {

};

// the primitives
var Number = function (value) {
Data.apply(this);
if (value === null)
value = false;
this.value = value;
};
inheritsFrom(Number, Data);

var Boolean = function (value) {
Data.apply(this);
if (value === null)
value = false;
this.value = value;
};
inheritsFrom(Boolean, Data);

var Text = function (value) {
Data.apply(this);
if (value === null)
value = "";
this.value = value;
};
inheritsFrom(Text, Data);

var Obj = function (value, objType) {
Data.apply(this);
this.objType = objType;
this.value = value;
};
inheritsFrom(Obj, Data);

var ReferData = function (referValue, dataType) {
Data.apply(this);
this.dataType = dataType;
this.referValue = referValue;
};
inheritsFrom(ReferData, Data);
// end of the primitives

<%for (var key in sim.DataTypes) {
    parseDataType(sim.DataTypes[key])
}%>



<% function parseData(data, prefix){
    type = data.type;
if(type === "Number" || type === "Boolean"){
    var value = data.value;%><%-prefix%>=new <%=type%>(<%=value%>);<%}
else if (type === "Text"){
    var value = data.value;%><%-prefix%>=new Text('<%-value%>');<%}
else if (type === "ReferData"){
    var referValue = data.value;
    var dataType = data.dataType;%><%-prefix%>=new ReferData('<%=referValue%>', '<%-dataType%>');<%}
else if (type === "Object"){
    var value = data.value;
    var objType = data.objType;%><%-prefix%>=new Obj(<%=value%>, '<%-objType%>');<%}
else if (type === "Dictionary"){%><%-prefix%>={};<%
    var values = data.values;
    for (var k in values){%>
<%parseData(values[k], prefix +"['"+k+"']")
}
}
}%>


<% function parseDataType(data){
type = data.type
var name = data.name
if(type === "Dictionary"){
var values = data.values%>
var <%=name%> = function () {
Data.apply(this);
<%for (var k in values){
parseData(values[k], "this['"+k+"']")%>
<%}%>
};
inheritsFrom(<%=name%> , Data);
<%}%>
<%}%>

